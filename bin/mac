#!/usr/bin/env bash

# This is a modified Version of the thoughtbot laptop script!
# https://github.com/thoughtbot/laptop

source ~/.dotfiles/bin/lib/homebrew.sh
source ~/.dotfiles/.exports

fancy_echo() {
  printf "\n%b\n" "$1"
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [[ ! -d "$HOME/.bin/" ]]; then
  ln -s "$HOME/.dotfiles/bin" "$HOME/.bin"
fi

if [[ "$SHELL" != */zsh ]]; then
  fancy_echo "Changing your shell to zsh ..."
    chsh -s $(which zsh)
fi

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby <(curl -fsS https://raw.githubusercontent.com/Homebrew/install/master/install)
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Installing Redis, a good key-value database ..."
  brew_install_or_upgrade 'redis'

fancy_echo "Installing The Silver Searcher (better than ack or grep) to search the contents of files ..."
  brew_install_or_upgrade 'the_silver_searcher'

#fancy_echo "Installing vim from Homebrew to get the latest version ..."
#  brew_install_or_upgrade 'vim'

#fancy_echo "Installing ctags, to index files for vim tab completion of methods, classes, variables ..."
#  brew_install_or_upgrade 'ctags'

fancy_echo "Installing tmux, to save project state and switch between projects ..."
  brew_install_or_upgrade 'tmux'

fancy_echo "Installing reattach-to-user-namespace, for copy-paste and RubyMotion compatibility with tmux ..."
  brew_install_or_upgrade 'reattach-to-user-namespace'

#fancy_echo "Installing ImageMagick, to crop and resize images ..."
#  brew_install_or_upgrade 'imagemagick --with-webp'

fancy_echo "Installing QT, used by Capybara Webkit for headless Javascript integration testing ..."
  brew_install_or_upgrade 'qt'

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  brew_install_or_upgrade 'watch'

fancy_echo "Installing Go language ..."
  brew_install_or_upgrade 'go'

#fancy_echo "Installing brew-cask ..."
#  brew_install_or_upgrade 'caskroom/cask/brew-cask'

node_version="0.10"

fancy_echo "Installing NVM, Node.js, and NPM, for running apps and installing JavaScript packages ..."
  brew_install_or_upgrade 'nvm'

#  append_to_zshrc 'export PATH="$PATH:/usr/local/lib/node_modules"'
#  append_to_zshrc 'source $(brew --prefix nvm)/nvm.sh' 1

  source $(brew --prefix nvm)/nvm.sh
  nvm install "$node_version"

  fancy_echo "Setting $node_version as the global default nodejs..."
  nvm alias default "$node_version"

fancy_echo "Upgrading and linking OpenSSL ..."
  brew_install_or_upgrade 'openssl'
  brew unlink openssl && brew link openssl --force

fancy_echo "Updating to latest Rubygems version ..."
  gem update --system

fancy_echo "Installing Bundler to install project-specific Ruby gems ..."
  gem install bundler --no-document

fancy_echo "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))

fancy_echo "Installing Heroku CLI for managing Heroku apps and Foreman for managing app processes ..."
  brew_install_or_upgrade 'heroku-toolbelt'
