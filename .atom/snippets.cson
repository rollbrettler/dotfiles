# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
'.source.js':
  'jquery ready':
    'prefix': 'ready'
    'body': """
      $("${1:selector}").ready(function(){
        $2
      });
    """
  'self executing':
    'prefix': 'load'
    'body': """
      $(function() {
        $1
      });
      """
  'extend':
    'prefix': 'extend'
    'body': """
      Object.assign({}, $1.defaults, options || {})
      """
  'log':
    'prefix': 'log'
    'body': 'console.log( $1 )$0'
  'component boilderplate':
    'prefix': 'component'
    'body': """
      var Emitter = require( 'events' ).EventEmitter
      var inherit = require( 'bloodline' )

      /**
       * $0
       * @param {HTMLElement} element
       * @param {Object} options (optional)
       * @return {$0}
       */
      function $0( element, options ) {

        if ( !( this instanceof $0 ) ) {
          return new $0( element, options )
        }

        Emitter.call( this )
        this.options = Object.assign({}, $0.defaults, options || {})

      }

      /**
       * Default options
       * @type {Object}
       */
      $0.defaults = {

      }

      /**
       * Link prototype
       * @type {Object}
       */
      $0.prototype = {

        constructor: $0,

      }

      inherit( $0, Emitter )
      module.exports = $0

    """
'.source.go':
  'go boilderplate':
    'prefix': 'start'
    'body': """
      package main

      import (
      	"fmt"
      )

      func main() {
      	fmt.Printf("Start")
      }
    """
  'log':
    'prefix': 'log'
    'body': """
      log.Printf("Log Entry: %v\\n", $1)
    """
